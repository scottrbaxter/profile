; vim: set ft=gitconfig:
[alias]
    addp                 = add --patch
    amend                = commit -a --amend
    delete               = branch -d
    delete-without-merge = branch -D
    diffw                = diff --word-diff
    graph                = log --graph --all --decorate --stat --date = iso
    head-branch          = !git remote show origin | grep HEAD | awk '{print $3}'
    local                = log --oneline --no-merges
    newbranch            = checkout -b
    pf                   = push --force-with-lease
    removechanges        = checkout --
    renamebranch         = branch -m
    staged               = diff --staged
    submodulelist        = "!f() { git config --file .gitmodules --get-regexp path | awk '{ print $2 }'; }; f"
    switch               = "!f() { git checkout $1 2>/dev/null || git checkout -b $1 origin/$1 2>/dev/null || git checkout -b $1; git submodule update --init --recursive; }; f"
    undo                 = reset HEAD~1 --mixed
    unstage              = "!f() { git reset HEAD "$@" && gs; }; f"
    url                  = remote -v
    wip                  = commit -am "WIP"
    wipe                 = !git add -A && git commit -qm 'WIPE SAVEPOINT' && git reset HEAD~1 --hard
[color "diff"]
    meta = cyan normal bold
[core]
    editor       = vim
    pager        = less
    excludesfile = ~/.gitignore_global
[diff]
    ignoreSubmodules = dirty
[github]
    user = scottrbaxter
[merge]
    tool = opendiff
[pager]
    branch    = false
    config    = false
    diff      = false
    show      = false
    stash     = false
    submodule = false
    tag       = false
[status]
    ignoreSubmodules = dirty
    submoduleSummary = true
[user]
    email = scottrbaxter@gmail.com
    name  = Scott Baxter
[credential]
    helper = osxkeychain
[diff]
    ; https://git-scm.com/docs/git-config#git-config-statussubmoduleSummary
    ; ignoreSubmodules = all ; will never be considered modified, but will show up in output of status and commit when it has been staged
    ignoreSubmodules = dirty ; ignore changes to the submodules work tree and differences between HEAD of the submodule and commit recorded in the superproject
    ; ignoreSubmodules = untracked ; let submodules with modified tracked files in their work tree show up
[diff "sopsdiffer"]
    textconv = sops -d
